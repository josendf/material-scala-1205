<?php

// Setup the path to the thrift library folder
$GLOBALS['THRIFT_ROOT'] = 'thrift';

// Load up all the thrift stuff
require_once $GLOBALS['THRIFT_ROOT'].'/Thrift.php';
require_once $GLOBALS['THRIFT_ROOT'].'/transport/TSocket.php';
require_once $GLOBALS['THRIFT_ROOT'].'/protocol/TBinaryProtocol.php';
require_once $GLOBALS['THRIFT_ROOT'].'/transport/TFramedTransport.php';

// Load the package that we autogenerated for this tutorial
require_once $GLOBALS['THRIFT_ROOT'].'/packages/MyService/MyService.php';

// Several things might go wrong
try {
	// Create a thrift connection (Boiler plate)
	$socket    = new TSocket('localhost', '9999');
	$transport = new TFramedTransport($socket);
	$protocol  = new TBinaryProtocolAccelerated($transport);

	// Create a client
	$client = new MyServiceClient($protocol);

	// Open up the connection
	$transport->open();

	// Perform operation on the server
	$key = "Hello";
	$val = "World";
	$client->myPut($key, $val);
	echo "Put: ".$key."=".$val."\r\n";

	// And finally, we close the thrift connection
	$transport->close();

} catch (MyServiceException $se) {
	// performed an illegal operation
	echo "MyServiceException: ".$se->msg."\r\n";

} catch (TException $tx) {
	// a general thrift exception, like no such server
	echo "ThriftException: ".$tx->getMessage()."\r\n";
}
?>

